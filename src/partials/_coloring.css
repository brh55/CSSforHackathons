/* ==========================================================================
   Coloring

   Any color-related rule declarations
   ========================================================================== */

/**
 * TODO: Find alternative approach that's follows DRY-principles
 *
 * => Find a key,value plugin to loop through
 * => Reduce to a few lines if possible.
 *
 */

.color {
	@each $color in $color-names {
		&__this-text-$(color) {
			@if $color == green { color: $green; }
			@if $color == dark-green { color: $dark-green; }
			@if $color == blue { color: $blue; }
			@if $color == dark-blue { color: $dark-blue; }
			@if $color == purple { color: $purple; }
			@if $color == dark-purple { color: $dark-purple; }
			@if $color == yellow { color: $yellow; }
			@if $color == dark-yellow { color: $dark-yellow; }
			@if $color == red { color: $red; }
			@if $color == dark-red { color: $dark-red; }
			@if $color == orange { color: $orange; }
			@if $color == dark-orange { color: $dark-orange; }
			@if $color == cloud { color: $cloud; }
			@if $color == grey { color: $grey; }
			@if $color == dark-grey { color: $dark-grey; }
		}
	}

	@each $color in $color-names {
		&__this-block-$(color) {
			@if $color == green { background-color: $green; }
			@if $color == dark-green { background-color: $dark-green; }
			@if $color == blue { background-color: $blue; }
			@if $color == dark-blue { background-color: $dark-blue; }
			@if $color == purple { background-color: $purple; }
			@if $color == dark-purple { background-color: $dark-purple; }
			@if $color == yellow { background-color: $yellow; }
			@if $color == dark-yellow { background-color: $dark-yellow; }
			@if $color == red { background-color: $red; }
			@if $color == dark-red { background-color: $dark-red; }
			@if $color == orange { background-color: $orange; }
			@if $color == dark-orange { background-color: $dark-orange; }
			@if $color == cloud { background-color: $cloud; }
			@if $color == grey { background-color: $grey; }
			@if $color == dark-grey { background-color: $dark-grey; }
		}
	}
}

.make {
	@mixin ie this, block {
		&-greyscale,
		&-black-and-white {
			filter: grayscale(100%)
		}
	}
}

.bold {
	@mixin ie this, text {
		font-weight: bold;
	}
}

.shadow {
	@mixin i this {
		&-text,
		&-block {
			filter: drop-shadow(3px 3px 6px black);
		}
	}
}